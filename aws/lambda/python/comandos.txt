# Instalar pacotes Python em um Diretório Específico
pip install --system --target ./package Pillow

# Adicionar conteúdo do diretório corrente em um .zip no diretório anterior
zip -r9 ${OLDPWD}/function.zip .

# Adicionar um arquivo a um zip existente.
zip -g function.zip function.py

# Criar nova função
aws lambda create-function --function new_function --runtime python3.7 --role arn:aws:iam::************:role/lambda-role --handle function.lambda_handler --zip-file fileb://function.zip

# Atualizar código da função
aws lambda update-function-code --function-name new_function --zip-file fileb://function.zip

# Invocar a função
aws lambda invoke --function-name new_function out --log-type Tail --query 'LogResult' --output text | base64 -d

# Invocar a função com parâmetro a ser recuperado no event.
aws lambda invoke --function-name new_function out --payload '{"bucket_name":"jmhal"}' --log-type Tail --query 'LogResult' --output text | base64 -d

# Listar os grupos de logs (incluem as funções)
aws logs describe-log-groups

# Listar os fluxos de logs para uma função
aws logs describe-log-streams --log-group-name /aws/lambda/NOMEDAFUNCAO

# Listar os fluxos de logs para uma função, ordenados por tempo 
aws logs describe-log-streams --log-group-name /aws/lambda/NOMEDAFUNCAO --order-by LastEventTime

# Pegar o último fluxo da função (bom para depurar)
aws logs describe-log-streams --log-group-name /aws/lambda/NOMEDAFUNCAO --order-by LastEventTime --descending --max-items 1                   
aws logs describe-log-streams --log-group-name /aws/lambda/NOMEDAFUNCAO --order-by LastEventTime --descending --max-items 1 | jq .logStreams[0].logStreamName
aws logs describe-log-streams --log-group-name /aws/lambda/NOMEDAFUNCAO --order-by LastEventTime --descending --max-items 1 | jq .logStreams[0].logStreamName | sed 's/\"//g'

# Mostrar o último fluxo (LASTSTRAM é o resultado do último comando acima.)
aws logs get-log-events --log-group-name /aws/lambda/NOMEDAFUNCAO --log-stream-name $LASTSTREAM
